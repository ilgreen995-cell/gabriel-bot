# -*- coding: utf-8 -*-
import os
import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (Application, CommandHandler, CallbackQueryHandler, ContextTypes)

# --- НАЗВАНИЕ ПРОЕКТА ---
PROJECT_NAME = "--- AI-писатель «Габриэль глаголит Даля» (v12.1 Стабильная) ---"

# --- ГИПЕР-РАСШИРЕННАЯ БАЗА ТЕМАТИЧЕСКИХ СЛОВ ---
THEMES = {
    "искусство": {
        "subjects_ru": ["скульптура", "картина", "бюст", "гобелен", "фреска", "мольберт", "статуя", "натюрморт", "пейзаж", "гравюра", "инсталляция", "перформанс", "барельеф", "эскиз", "мозаика"],
        "adjectives_ru": ["авангардный", "классический", "абстрактный", "монументальный", "античный", "сюрреалистический", "готический", "помпезный", "минималистичный", "экспрессивный", "филигранный", "старинный", "современный", "бронзовый"],
        "verbs_ru": ["рисуя", "вдохновляя", "критикуя", "создавая", "разрушая", "созерцая", "выставляя", "реставрируя", "копируя", "оценивая", "позируя", "изображая", "воплощая"]
    },
    "рыбалка": {
        "subjects_ru": ["окунь", "рыбак", "удочка", "поплавок", "блесна", "сом", "щука", "садок", "спиннинг", "катушка", "невод", "гарпун", "омут", "приманка", "клёв"],
        "adjectives_ru": ["глубоководный", "трофейный", "старый", "опытный", "хищный", "запретный", "резиновый", "илистый", "проточный", "осторожный", "утренний", "подлёдный", "ненастный", "удачливый"],
        "verbs_ru": ["клюя", "ожидая", "срываясь", "погружаясь", "охотясь", "затаившись", "подсекая", "выуживая", "прикармливая", "хвастаясь", "мерзнув", "мокнув", "наблюдая"]
    },
    "космос": {
        "subjects_ru": ["астронавт", "ракета", "пришелец", "астероид", "спутник", "звездолет", "комета", "галактика", "черная дыра", "скафандр", "космодром", "телескоп", "марсоход", "созвездие"],
        "adjectives_ru": ["межзвездный", "одинокий", "неопознанный", "далекий", "гравитационный", "космический", "орбитальный", "бесконечный", "солнечный", "лунный", "пульсирующий", "разумный"],
        "verbs_ru": ["летая", "исследуя", "сигнализируя", "приземляясь", "взлетая", "наблюдая", "стыкуясь", "колонизируя", "дрейфуя", "сканируя", "вычисляя", "мечтая"]
    },
    "медицина": {
        "subjects_ru": ["хирург", "пациент", "скальпель", "диагноз", "вирус", "таблетка", "вакцина", "ампула", "госпиталь", "рецепт", "симптом", "профессор", "анатом", "эпидемия"],
        "adjectives_ru": ["стерильный", "хронический", "экстренный", "клинический", "инфекционный", "неизлечимый", "хирургический", "терапевтический", "виртуальный", "обезболивающий", "профилактический", "генетический"],
        "verbs_ru": ["исцеляя", "диагностируя", "оперируя", "заражая", "исследуя", "спасая", "ампутируя", "выписывая", "обследуя", "реанимируя", "жалуясь", "экспериментируя"]
    },
    "кулинария": {
        "subjects_ru": ["шеф-повар", "рецепт", "деликатес", "ингредиент", "соус", "десерт", "сковорода", "бульон", "гарнир", "специи", "трюфель", "фуа-гра", "пир", "банкет"],
        "adjectives_ru": ["пикантный", "ароматный", "хрустящий", "фирменный", "экзотический", "сливочный", "карамельный", "копченый", "маринованный", "диетический", "молекулярный", "авторский", "пережаренный"],
        "verbs_ru": ["готовя", "пробуя", "смешивая", "украшая", "обжаривая", "маринуя", "дегустируя", "сервируя", "взбивая", "нарезая", "запекая", "критикуя"]
    },
    "военное дело": {
        "subjects_ru": ["генерал", "солдат", "танк", "ракета", "траншея", "приказ", "капитан", "батальон", "атака", "оборона", "эскадрилья", "снайпер", "диверсант", "штаб"],
        "adjectives_ru": ["стратегический", "тактический", "штурмовой", "секретный", "оборонительный", "непобедимый", "фланговый", "маскировочный", "артиллерийский", "контратакующий", "десантный", "окруженный"],
        "verbs_ru": ["атакуя", "обороняясь", "командуя", "маскируясь", "отступая", "побеждая", "салютуя", "маршируя", "окапываясь", "шпионя", "докладывая", "сдаваясь"]
    },
    "мифология": {
        "subjects_ru": ["циклоп", "грифон", "божество", "герой", "титан", "оракул", "минотавр", "лабиринт", "олимп", "валькирия", "химера", "артефакт", "кентавр", "медуза"],
        "adjectives_ru": ["мифический", "легендарный", "божественный", "одноглазый", "крылатый", "древний", "олимпийский", "загадочный", "непобедимый", "проклятый", "бессмертный", "титанический"],
        "verbs_ru": ["сражаясь", "предсказывая", "повелевая", "создавая", "путешествуя", "разрушая", "пируя", "проклиная", "воскрешая", "околдовывая", "превращаясь", "жертвуя"]
    },
    "наука": {
        "subjects_ru": ["ученый", "эксперимент", "теория", "атом", "формула", "открытие", "гипотеза", "лаборатория", "молекула", "реакция", "кварк", "нейтрон", "парадокс", "аксиома"],
        "adjectives_ru": ["научный", "теоретический", "квантовый", "революционный", "эмпирический", "доказанный", "химический", "биологический", "атомный", "академический", "гипотетический", "невероятный"],
        "verbs_ru": ["доказывая", "исследуя", "открывая", "вычисляя", "анализируя", "экспериментируя", "ошибаясь", "публикуя", "споря", "наблюдая", "синтезируя", "прогнозируя"]
    },
    "пиратство": {
        "subjects_ru": ["корсар", "фрегат", "сокровище", "карта", "ром", "остров", "капитан", "сабля", "пушка", "бухта", "черная метка", "компас", "шхуна", "сундук"],
        "adjectives_ru": ["пиратский", "одноногий", "зарытый", "трофейный", "штормовой", "проклятый", "морской", "отчаянный", "соленый", "безлюдный", "бородатый", "кровожадный"],
        "verbs_ru": ["грабя", "путешествуя", "сражаясь", "пируя", "ища", "пряча", "поднимая флаг", "абордируя", "пропивая", "ориентируясь", "бунтуя", "угрожая"]
    },
    "музыка": {
        "subjects_ru": ["дирижер", "симфония", "кларнет", "мелодия", "ритм", "солист", "рояль", "партитура", "гармония", "октава", "концерт", "оркестр", "метроном", "композитор"],
        "adjectives_ru": ["мелодичный", "гармоничный", "симфонический", "виртуозный", "джазовый", "мажорный", "минорный", "классический", "ритмичный", "полифонический", "камерный", "акустический", "фальшивый"],
        "verbs_ru": ["играя", "сочиняя", "дирижируя", "импровизируя", "слушая", "исполняя", "аплодируя", "аккомпанируя", "репетируя", "настраивая", "фальшивя", "вдохновляя"]
    },
    "религия": {
        "subjects_ru": ["пророк", "ангел", "демон", "молитва", "храм", "ритуал", "святой", "грех", "заповедь", "паломник", "алтарь", "апостол", "монах", "реликвия"],
        "adjectives_ru": ["священный", "божественный", "грешный", "праведный", "ангельский", "духовный", "апостольский", "ритуальный", "монастырский", "канонический", "чудотворный", "демонический", "потусторонний"],
        "verbs_ru": ["молясь", "проповедуя", "искушая", "прощая", "веруя", "благословляя", "канонизируя", "отрекаясь", "исповедуясь", "жертвуя", "медитируя", "согрешив"]
    },
    "роскошная жизнь": {
        "subjects_ru": ["олигарх", "яхта", "особняк", "бриллиант", "дворец", "лимузин", "шампанское", "частный джет", "кутюр", "икра", "пентхаус", "антиквариат", "дворецкий", "лакшери"],
        "adjectives_ru": ["роскошный", "элитный", "гламурный", "дизайнерский", "эксклюзивный", "платиновый", "позолоченный", "бриллиантовый", "пятизвездочный", "винтажный", "шикарный", "пафосный"],
        "verbs_ru": ["наслаждаясь", "тратя", "путешествуя", "владея", "покупая", "коллекционируя", "инвестируя", "пируя", "хвастаясь", "лениво", "управляя", "скучая"]
    },
    "автомобили": {
        "subjects_ru": ["суперкар", "двигатель", "гонка", "пилот", "болид", "дрифт", "спойлер", "турбина", "автобан", "тюнинг", "кабриолет", "нитро", "автомеханик", "трасса"],
        "adjectives_ru": ["гоночный", "скоростной", "карбоновый", "мощный", "эксклюзивный", "винтажный", "форсированный", "хромированный", "низкопрофильный", "заднеприводный", "тюнингованный", "блестящий"],
        "verbs_ru": ["гоняя", "дрифтуя", "обгоняя", "тюнингуя", "тормозя", "ускоряясь", "ремонтируя", "сигналя", "паркуясь", "заправляя", "коллекционируя", "разбиваясь"]
    },
    "интернет и тренды": {
        "subjects_ru": ["блогер", "мем", "хайп", "стрим", "нейросеть", "челлендж", "подписчик", "алгоритм", "донат", "вирус", "тренд", "подкаст", "хейтер", "инфлюенсер"],
        "adjectives_ru": ["вирусный", "трендовый", "цифровой", "хайповый", "популярный", "забаненный", "стриминговый", "нейросетевой", "онлайновый", "виртуальный", "токсичный", "залайканный"],
        "verbs_ru": ["стримя", "хайпуя", "создавая", "публикуя", "комментируя", "лайкая", "хейтя", "донатя", "подписываясь", "отписываясь", "тролля", "генерируя"]
    },
    "девушки и люди": {
        "subjects_ru": ["девушка", "парень", "модель", "актриса", "студент", "старик", "младенец", "незнакомец", "толпа", "одиночка", "близнецы", "гений", "хулиган", "принцесса"],
        "adjectives_ru": ["красивый", "загадочный", "веселый", "грустный", "странный", "обычный", "талантливый", "бедный", "богатый", "молодой", "старый", "влюбленный", "одинокий"],
        "verbs_ru": ["флиртуя", "ссорясь", "мечтая", "работая", "отдыхая", "путешествуя", "знакомясь", "прощаясь", "влюбляясь", "разочаровываясь", "надеясь", "страдая"]
    }
}


# --- ДУША ПРОЕКТА: ГИПЕР-РАСШИРЕННЫЙ СЛОВАРЬ ДАЛЯ ---
GLAGOLY_DALYA_RU = [
    "встопорщиться", "ерничать", "околпачить", "лукавствовать", "негодовать", "брезжить", "кумекать", "учинить", "насупиться", "ворожить", "скоморошничать", 
    "пенять", "лебезить", "судачить", "юродствовать", "кощунствовать", "ерепениться", "благолепствовать", "фиглярничать", "тунеядствовать", "усердствовать", 
    "лихоимствовать", "благоухать", "велеречить", "возбранять", "гнушаться", "гоношиться", "дерзновенничать", "ехидничать", "ёрничать", "ёрзать", "ёршиться", 
    "елозить", "елозить", "ерепениться", "ереситься", "еретичиться", "жадничать", "жеманиться", "журить", "жульничать", "забиячить", "заботиться", "забраниться", 
    "заважничать", "завидовать", "завоображать", "завораживать", "задирать", "задумываться", "заискивать", "заикаться", "закабалить", "закапризничать", "закоснеть", 
    "закостенеть", "закуролесить", "залихватствовать", "залукавиться", "заматереть", "замечтаться", "занемочь", "заноситься", "занудствовать", "заорать", "запанибратствовать", 
    "запамятовать", "запинаться", "запировать", "заплутать", "заполонить", "заправлять", "запроказничать", "запросто", "запугивать", "запузыриться", "запыхаться", 
    "зардеться", "зариться", "зарумяниться", "засахариться", "засвидетельствовать", "засмущаться", "засовеститься", "засохнуть", "застареть", "затаиться", "затевать", 
    "затомиться", "заторопиться", "затуманиться", "затушеваться", "зафилософствовать", "захворать", "захиреть", "захлебнуться", "захмелеть", "захохотать", "зацапать", 
    "зачахнуть", "зашалить", "зашевелиться", "зашипеть", "зашуметь", "защебетать", "зверствовать", "зевать", "злобиться", "зловредничать", "злорадствовать", 
    "злословить", "злоумышлять", "знахарствовать", "зубоскалить", "иждивенствовать", "избаловаться", "избегать", "изворачиваться", "изволить", "изгаляться", 
    "изловчиться", "излукавиться", "изнемогать", "изобличать", "изощряться", "изуверствовать", "изумляться", "изъясняться", "искать", "исколесить", "искупать", 
    "искушать", "испаряться", "исповедовать", "исподтишка", "исполнять", "исполосовать", "исправлять", "испытывать", "иссякать", "истязать", "исцелять", "исчезать", 
    "исчерпывать", "каверзничать", "каламбурить", "калечить", "канителиться", "канючить", "капризничать", "карать", "картавить", "каяться", "квасить", "квохтать", 
    "кемарить", "кичиться", "клеветать", "клянчить", "кобениться", "коверкать", "колдовать", "колебаться", "колобродить", "колотиться", "колдовать", "колпачить", 
    "командовать", "конфузиться", "кооперироваться", "копошиться", "коптеть", "копытить", "корежиться", "корпеть", "корячиться", "косить", "костенеть", "костылять", 
    "кощунствовать", "кошмариться", "красоваться", "кривляться", "крохоборствовать", "кручиниться", "кряхтеть", "кудахтать", "кумекать", "куражиться", "куролесить", 
    "кутить", "кучковаться", "лакомиться", "ласкаться", "лебезить", "леденеть", "лениться", "лепетать", "ликовать", "лицемерить", "лихорадить", "лодырничать", 
    "ломаться", "лопаться", "лопотать", "лохматиться", "лукавить", "лукавствовать", "лучиться", "лысеть", "льстить", "любезничать", "любоваться", "любопытствовать"
]


# --- ЛИТЕРАТУРНЫЕ ШАБЛОНЫ ДЛЯ ПРЕДЛОЖЕНИЙ ---
SENTENCE_TEMPLATES_RU = [
    "{verb_gerund}, {adj} {subj} решил {dahl_verb}.",
    "{adj} {subj}, который {verb_gerund}, внезапно начал {dahl_verb}.",
    "Даже не пытаясь {verb_part}, {adj} {subj} предпочел {dahl_verb}.",
    "В центре внимания оказался {adj} {subj}, который, {verb_gerund}, умудрился {dahl_verb}."
]

# --- ТЕХНИЧЕСКИЕ ПАРАМЕТРЫ СЪЕМКИ ---
CAMERA_ANGLES_RU = ["Крупный план", "Сверхширокий общий план", "Съемка с нижнего ракурса", "Вид сверху", "Голландский угол"]
CAMERA_MOVEMENTS_RU = ["Плавный наезд", "Быстрый монтаж", "Медленное панорамирование", "Съемка со стедикама", "Вращение камеры"]
LENS_EFFECTS_RU = ["Эффект 'рыбий глаз'", "Мягкий фокус с боке", "Анаморфотные блики", "Эффект 'тильт-шифт'"]
STYLES_RU = ["в стиле Уэса Андерсона", "гиперреализм", "как запись на VHS кассету", "кукольная анимация", "в стиле аниме", "киберпанк"]
TEMPORAL_ELEMENTS_RU = ["Замедленная съемка (slow motion)", "Ускоренная съемка (timelapse)", "Резкий стоп-кадр", "Обратная перемотка"]
AUDIO_RU = ["Эпическая оркестровая музыка", "Звуки природы", "Полная тишина", "Электронная музыка 80-х", "Диалог шепотом"]

# --- Английские версии для промпта ---
CAMERA_ANGLES_EN = ["close-up shot", "extreme wide shot", "low-angle shot", "top-down shot", "dutch angle"]
CAMERA_MOVEMENTS_EN = ["dolly in", "fast cut editing", "slow panning", "steadicam shot", "360-degree rotation"]
LENS_EFFECTS_EN = ["fisheye lens", "soft focus with bokeh", "anamorphic lens flare", "tilt-shift effect"]
STYLES_EN = ["in the style of Wes Anderson", "hyperrealistic, 8K", "80s VHS recording", "stop-motion animation", "Studio Ghibli anime style", "cyberpunk"]
TEMPORAL_ELEMENTS_EN = ["slow motion", "timelapse", "freeze frame", "reverse motion"]
AUDIO_EN = ["epic orchestral music", "sounds of nature", "complete silence", "80s electronic synth music", "whispered dialogue"]


# --- ИНТЕРАКТИВНЫЕ ФУНКЦИИ БОТА ---

def get_theme_keyboard(selected_themes):
    keyboard = []
    row = []
    theme_names = sorted(list(THEMES.keys()))
    for theme_name in theme_names:
        text = f"✅ {theme_name.capitalize()}" if theme_name in selected_themes else theme_name.capitalize()
        row.append(InlineKeyboardButton(text, callback_data=theme_name))
        if len(row) == 2:
            keyboard.append(row)
            row = []
    if row:
        keyboard.append(row)
    
    if len(selected_themes) == 3:
        keyboard.append([InlineKeyboardButton("🚀 Создать Сценарий!", callback_data="generate")])
        
    return InlineKeyboardMarkup(keyboard)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['selected_themes'] = []
    keyboard = get_theme_keyboard([])
    message_text = ("Привет! Я — AI-писатель Габриэль.\n\n"
                    "Пожалуйста, выбери ровно три темы для создания уникального сценария.")
    
    if update.message:
        await update.message.reply_text(message_text, reply_markup=keyboard)
    elif update.callback_query:
        # Убираем старую клавиатуру, отправляя новое сообщение
        await context.bot.send_message(chat_id=update.callback_query.message.chat_id, text=message_text, reply_markup=keyboard)
        await update.callback_query.message.delete()


    return SELECTING_THEMES

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    theme_name = query.data
    
    selected_themes = context.user_data.get('selected_themes', [])

    if theme_name == "generate":
        return await generate_script(update, context)

    if theme_name in selected_themes:
        selected_themes.remove(theme_name)
    elif len(selected_themes) < 3:
        selected_themes.append(theme_name)
        
    context.user_data['selected_themes'] = selected_themes
    
    keyboard = get_theme_keyboard(selected_themes)
    
    count = len(selected_themes)
    if count < 3:
        text = f"Выбрано {count} из 3. Пожалуйста, выбери еще {3-count}."
    else:
        text = f"Отлично! Твой микс: {', '.join(t.capitalize() for t in selected_themes)}.\n\nНажми 'Создать Сценарий!'."

    await query.edit_message_text(text=text, reply_markup=keyboard)
    
    return SELECTING_THEMES

async def generate_script(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.edit_message_text(text="Принято! Создаю литературный шедевр для VEO...")

    selected_themes = context.user_data.get('selected_themes', [])

    # Собираем смешанные базы слов
    combined_subjects = [word for theme in selected_themes for word in THEMES[theme]["subjects_ru"]]
    combined_adjectives = [word for theme in selected_themes for word in THEMES[theme]["adjectives_ru"]]
    combined_verbs = [word for theme in selected_themes for word in THEMES[theme]["verbs_ru"]]

    # Выбираем слова
    subj = random.choice(combined_subjects)
    adj = random.choice(combined_adjectives)
    verb_gerund = random.choice(combined_verbs) 
    dahl_verb = random.choice(GLAGOLY_DALYA_RU) 
    verb_part = verb_gerund 

    # Создаем литературное предложение
    template = random.choice(SENTENCE_TEMPLATES_RU)
    literary_prompt = template.format(subj=subj, adj=adj, verb_gerund=verb_gerund, verb_part=verb_part, dahl_verb=dahl_verb).capitalize()

    # Генерируем технический промпт
    angle = random.choice(CAMERA_ANGLES_RU)
    movement = random.choice(CAMERA_MOVEMENTS_RU)
    lens = random.choice(LENS_EFFECTS_RU)
    style = random.choice(STYLES_RU)
    temporal = random.choice(TEMPORAL_ELEMENTS_RU)
    audio = random.choice(AUDIO_RU)
    
    script_ru = (
        f"🎬 **Режиссерский сценарий (VEO)**\n\n"
        f"▪️ **Subject:** {subj.capitalize()}\n"
        f"▪️ **Action:** {verb_gerund}\n"
        f"▪️ **Scene:** {adj} пейзаж\n"
        f"▪️ **Camera angles:** {angle}\n"
        f"▪️ **Camera movements:** {movement}\n"
        f"▪️ **Lens effects:** {lens}\n"
        f"▪️ **Style:** {style}\n"
        f"▪️ **Temporal elements:** {temporal}\n"
        f"▪️ **Audio:** {audio}\n\n"
        f"🎤 **Голос Габриэля:** *{literary_prompt}*"
    )

    prompt_en = (
        f"Subject: a {adj} {subj}\n"
        f"Action: {verb_gerund}\n"
        f"Scene: a vast landscape\n"
        f"Style: {random.choice(STYLES_EN)}"
    )

    await context.bot.send_message(chat_id=query.message.chat_id, text=script_ru, parse_mode='Markdown')
    await context.bot.send_message(chat_id=query.message.chat_id, text=f"🤖 **Промпт для VEO:**\n\n`{prompt_en}`", parse_mode='Markdown')
    
    # После генерации, снова показываем стартовое меню
    await start(update, context)
    return SELECTING_THEMES


async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    print(f"Произошла ошибка: {context.error}")

def main() -> None:
    TOKEN = os.environ.get('TELEGRAM_TOKEN')
    if not TOKEN:
        print("ОШИБКА: Токен не найден.")
        return

    application = Application.builder().token(TOKEN).build()
    
    application.add_error_handler(error_handler)
    
    # Упрощенная логика без ConversationHandler, которая решает проблему с предупреждением
    application.add_handler(CommandHandler('start', start))
    application.add_handler(CallbackQueryHandler(button_handler))
    
    print(f"{PROJECT_NAME} запущен и готов к работе!")
    application.run_polling()

if __name__ == "__main__":
    main()

# -*- coding: utf-8 -*-
import os
import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (Application, CommandHandler, CallbackQueryHandler, ContextTypes, ConversationHandler)

# --- НАЗВАНИЕ ПРОЕКТА ---
PROJECT_NAME = "--- AI-писатель «Габриэль глаголит Даля» (v12.0 Гипер-расширение) ---"

# Определяем состояния для диалога
SELECTING_THEMES, GENERATING = range(2)

# --- ГИПЕР-РАСШИРЕННАЯ БАЗА ТЕМАТИЧЕСКИХ СЛОВ ---
THEMES = {
    "искусство": {
        "subjects_ru": ["скульптура", "картина", "бюст", "гобелен", "фреска", "мольберт", "статуя", "натюрморт", "пейзаж", "гравюра", "инсталляция", "перформанс", "барельеф", "эскиз", "мозаика"],
        "adjectives_ru": ["авангардный", "классический", "абстрактный", "монументальный", "античный", "сюрреалистический", "готический", "помпезный", "минималистичный", "экспрессивный", "филигранный", "старинный", "современный", "бронзовый"],
        "verbs_ru": ["рисуя", "вдохновляя", "критикуя", "создавая", "разрушая", "созерцая", "выставляя", "реставрируя", "копируя", "оценивая", "позируя", "изображая", "воплощая"]
    },
    "рыбалка": {
        "subjects_ru": ["окунь", "рыбак", "удочка", "поплавок", "блесна", "сом", "щука", "садок", "спиннинг", "катушка", "невод", "гарпун", "омут", "приманка", "клёв"],
        "adjectives_ru": ["глубоководный", "трофейный", "старый", "опытный", "хищный", "запретный", "резиновый", "илистый", "проточный", "осторожный", "утренний", "подлёдный", "ненастный", "удачливый"],
        "verbs_ru": ["клюя", "ожидая", "срываясь", "погружаясь", "охотясь", "затаившись", "подсекая", "выуживая", "прикармливая", "хвастаясь", "мерзнув", "мокнув", "наблюдая"]
    },
    "космос": {
        "subjects_ru": ["астронавт", "ракета", "пришелец", "астероид", "спутник", "звездолет", "комета", "галактика", "черная дыра", "скафандр", "космодром", "телескоп", "марсоход", "созвездие"],
        "adjectives_ru": ["межзвездный", "одинокий", "неопознанный", "далекий", "гравитационный", "космический", "орбитальный", "бесконечный", "солнечный", "лунный", "пульсирующий", "разумный"],
        "verbs_ru": ["летая", "исследуя", "сигнализируя", "приземляясь", "взлетая", "наблюдая", "стыкуясь", "колонизируя", "дрейфуя", "сканируя", "вычисляя", "мечтая"]
    },
    "медицина": {
        "subjects_ru": ["хирург", "пациент", "скальпель", "диагноз", "вирус", "таблетка", "вакцина", "ампула", "госпиталь", "рецепт", "симптом", "профессор", "анатом", "эпидемия"],
        "adjectives_ru": ["стерильный", "хронический", "экстренный", "клинический", "инфекционный", "неизлечимый", "хирургический", "терапевтический", "виртуальный", "обезболивающий", "профилактический", "генетический"],
        "verbs_ru": ["исцеляя", "диагностируя", "оперируя", "заражая", "исследуя", "спасая", "ампутируя", "выписывая", "обследуя", "реанимируя", "жалуясь", "экспериментируя"]
    },
    "кулинария": {
        "subjects_ru": ["шеф-повар", "рецепт", "деликатес", "ингредиент", "соус", "десерт", "сковорода", "бульон", "гарнир", "специи", "трюфель", "фуа-гра", "пир", "банкет"],
        "adjectives_ru": ["пикантный", "ароматный", "хрустящий", "фирменный", "экзотический", "сливочный", "карамельный", "копченый", "маринованный", "диетический", "молекулярный", "авторский", "пережаренный"],
        "verbs_ru": ["готовя", "пробуя", "смешивая", "украшая", "обжаривая", "маринуя", "дегустируя", "сервируя", "взбивая", "нарезая", "запекая", "критикуя"]
    },
    "военное дело": {
        "subjects_ru": ["генерал", "солдат", "танк", "ракета", "траншея", "приказ", "капитан", "батальон", "атака", "оборона", "эскадрилья", "снайпер", "диверсант", "штаб"],
        "adjectives_ru": ["стратегический", "тактический", "штурмовой", "секретный", "оборонительный", "непобедимый", "фланговый", "маскировочный", "артиллерийский", "контратакующий", "десантный", "окруженный"],
        "verbs_ru": ["атакуя", "обороняясь", "командуя", "маскируясь", "отступая", "побеждая", "салютуя", "маршируя", "окапываясь", "шпионя", "докладывая", "сдаваясь"]
    },
    "мифология": {
        "subjects_ru": ["циклоп", "грифон", "божество", "герой", "титан", "оракул", "минотавр", "лабиринт", "олимп", "валькирия", "химера", "артефакт", "кентавр", "медуза"],
        "adjectives_ru": ["мифический", "легендарный", "божественный", "одноглазый", "крылатый", "древний", "олимпийский", "загадочный", "непобедимый", "проклятый", "бессмертный", "титанический"],
        "verbs_ru": ["сражаясь", "предсказывая", "повелевая", "создавая", "путешествуя", "разрушая", "пируя", "проклиная", "воскрешая", "околдовывая", "превращаясь", "жертвуя"]
    },
    "наука": {
        "subjects_ru": ["ученый", "эксперимент", "теория", "атом", "формула", "открытие", "гипотеза", "лаборатория", "молекула", "реакция", "кварк", "нейтрон", "парадокс", "аксиома"],
        "adjectives_ru": ["научный", "теоретический", "квантовый", "революционный", "эмпирический", "доказанный", "химический", "биологический", "атомный", "академический", "гипотетический", "невероятный"],
        "verbs_ru": ["доказывая", "исследуя", "открывая", "вычисляя", "анализируя", "экспериментируя", "ошибаясь", "публикуя", "споря", "наблюдая", "синтезируя", "прогнозируя"]
    },
    "пиратство": {
        "subjects_ru": ["корсар", "фрегат", "сокровище", "карта", "ром", "остров", "капитан", "сабля", "пушка", "бухта", "черная метка", "компас", "шхуна", "сундук"],
        "adjectives_ru": ["пиратский", "одноногий", "зарытый", "трофейный", "штормовой", "проклятый", "морской", "отчаянный", "соленый", "безлюдный", "бородатый", "кровожадный"],
        "verbs_ru": ["грабя", "путешествуя", "сражаясь", "пируя", "ища", "пряча", "поднимая флаг", "абордируя", "пропивая", "ориентируясь", "бунтуя", "угрожая"]
    },
    "музыка": {
        "subjects_ru": ["дирижер", "симфония", "кларнет", "мелодия", "ритм", "солист", "рояль", "партитура", "гармония", "октава", "концерт", "оркестр", "метроном", "композитор"],
        "adjectives_ru": ["мелодичный", "гармоничный", "симфонический", "виртуозный", "джазовый", "мажорный", "минорный", "классический", "ритмичный", "полифонический", "камерный", "акустический", "фальшивый"],
        "verbs_ru": ["играя", "сочиняя", "дирижируя", "импровизируя", "слушая", "исполняя", "аплодируя", "аккомпанируя", "репетируя", "настраивая", "фальшивя", "вдохновляя"]
    },
    "религия": {
        "subjects_ru": ["пророк", "ангел", "демон", "молитва", "храм", "ритуал", "святой", "грех", "заповедь", "паломник", "алтарь", "апостол", "монах", "реликвия"],
        "adjectives_ru": ["священный", "божественный", "грешный", "праведный", "ангельский", "духовный", "апостольский", "ритуальный", "монастырский", "канонический", "чудотворный", "демонический", "потусторонний"],
        "verbs_ru": ["молясь", "проповедуя", "искушая", "прощая", "веруя", "благословляя", "канонизируя", "отрекаясь", "исповедуясь", "жертвуя", "медитируя", "согрешив"]
    },
    "роскошная жизнь": {
        "subjects_ru": ["олигарх", "яхта", "особняк", "бриллиант", "дворец", "лимузин", "шампанское", "частный джет", "кутюр", "икра", "пентхаус", "антиквариат", "дворецкий", "лакшери"],
        "adjectives_ru": ["роскошный", "элитный", "гламурный", "дизайнерский", "эксклюзивный", "платиновый", "позолоченный", "бриллиантовый", "пятизвездочный", "винтажный", "шикарный", "пафосный"],
        "verbs_ru": ["наслаждаясь", "тратя", "путешествуя", "владея", "покупая", "коллекционируя", "инвестируя", "пируя", "хвастаясь", "лениво", "управляя", "скучая"]
    },
    "автомобили": {
        "subjects_ru": ["суперкар", "двигатель", "гонка", "пилот", "болид", "дрифт", "спойлер", "турбина", "автобан", "тюнинг", "кабриолет", "нитро", "автомеханик", "трасса"],
        "adjectives_ru": ["гоночный", "скоростной", "карбоновый", "мощный", "эксклюзивный", "винтажный", "форсированный", "хромированный", "низкопрофильный", "заднеприводный", "тюнингованный", "блестящий"],
        "verbs_ru": ["гоняя", "дрифтуя", "обгоняя", "тюнингуя", "тормозя", "ускоряясь", "ремонтируя", "сигналя", "паркуясь", "заправляя", "коллекционируя", "разбиваясь"]
    },
    "интернет и тренды": {
        "subjects_ru": ["блогер", "мем", "хайп", "стрим", "нейросеть", "челлендж", "подписчик", "алгоритм", "донат", "вирус", "тренд", "подкаст", "хейтер", "инфлюенсер"],
        "adjectives_ru": ["вирусный", "трендовый", "цифровой", "хайповый", "популярный", "забаненный", "стриминговый", "нейросетевой", "онлайновый", "виртуальный", "токсичный", "залайканный"],
        "verbs_ru": ["стримя", "хайпуя", "создавая", "публикуя", "комментируя", "лайкая", "хейтя", "донатя", "подписываясь", "отписываясь", "тролля", "генерируя"]
    },
    "девушки и люди": {
        "subjects_ru": ["девушка", "парень", "модель", "актриса", "студент", "старик", "младенец", "незнакомец", "толпа", "одиночка", "близнецы", "гений", "хулиган", "принцесса"],
        "adjectives_ru": ["красивый", "загадочный", "веселый", "грустный", "странный", "обычный", "талантливый", "бедный", "богатый", "молодой", "старый", "влюбленный", "одинокий"],
        "verbs_ru": ["флиртуя", "ссорясь", "мечтая", "работая", "отдыхая", "путешествуя", "знакомясь", "прощаясь", "влюбляясь", "разочаровываясь", "надеясь", "страдая"]
    }
}


# --- ДУША ПРОЕКТА: ГИПЕР-РАСШИРЕННЫЙ СЛОВАРЬ ДАЛЯ ---
GLAGOLY_DALYA_RU = [
    "встопорщиться", "ерничать", "околпачить", "лукавствовать", "негодовать", "брезжить", "кумекать", "учинить", "насупиться", "ворожить", "скоморошничать", 
    "пенять", "лебезить", "судачить", "юродствовать", "кощунствовать", "ерепениться", "благолепствовать", "фиглярничать", "тунеядствовать", "усердствовать", 
    "лихоимствовать", "благоухать", "велеречить", "возбранять", "гнушаться", "гоношиться", "дерзновенничать", "ехидничать", "ёрничать", "ёрзать", "ёршиться", 
    "елозить", "елозить", "ерепениться", "ереситься", "еретичиться", "жадничать", "жеманиться", "журить", "жульничать", "забиячить", "заботиться", "забраниться", 
    "заважничать", "завидовать", "завоображать", "завораживать", "задирать", "задумываться", "заискивать", "заикаться", "закабалить", "закапризничать", "закоснеть", 
    "закостенеть", "закуролесить", "залихватствовать", "залукавиться", "заматереть", "замечтаться", "занемочь", "заноситься", "занудствовать", "заорать", "запанибратствовать", 
    "запамятовать", "запинаться", "запировать", "заплутать", "заполонить", "заправлять", "запроказничать", "запросто", "запугивать", "запузыриться", "запыхаться", 
    "зардеться", "зариться", "зарумяниться", "засахариться", "засвидетельствовать", "засмущаться", "засовеститься", "засохнуть", "застареть", "затаиться", "затевать", 
    "затомиться", "заторопиться", "затуманиться", "затушеваться", "зафилософствовать", "захворать", "захиреть", "захлебнуться", "захмелеть", "захохотать", "зацапать", 
    "зачахнуть", "зашалить", "зашевелиться", "зашипеть", "зашуметь", "защебетать", "зверствовать", "зевать", "злобиться", "зловредничать", "злорадствовать", 
    "злословить", "злоумышлять", "знахарствовать", "зубоскалить", "иждивенствовать", "избаловаться", "избегать", "изворачиваться", "изволить", "изгаляться", 
    "изловчиться", "излукавиться", "изнемогать", "изобличать", "изощряться", "изуверствовать", "изумляться", "изъясняться", "искать", "исколесить", "искупать", 
    "искушать", "испаряться", "исповедовать", "исподтишка", "исполнять", "исполосовать", "исправлять", "испытывать", "иссякать", "истязать", "исцелять", "исчезать", 
    "исчерпывать", "каверзничать", "каламбурить", "калечить", "канителиться", "канючить", "капризничать", "карать", "картавить", "каяться", "квасить", "квохтать", 
    "кемарить", "кичиться", "клеветать", "клянчить", "кобениться", "коверкать", "колдовать", "колебаться", "колобродить", "колотиться", "колдовать", "колпачить", 
    "командовать", "конфузиться", "кооперироваться", "копошиться", "коптеть", "копытить", "корежиться", "корпеть", "корячиться", "косить", "костенеть", "костылять", 
    "кощунствовать", "кошмариться", "красоваться", "кривляться", "крохоборствовать", "кручиниться", "кряхтеть", "кудахтать", "кумекать", "куражиться", "куролесить", 
    "кутить", "кучковаться", "лакомиться", "ласкаться", "лебезить", "леденеть", "лениться", "лепетать", "ликовать", "лицемерить", "лихорадить", "лодырничать", 
    "ломаться", "лопаться", "лопотать", "лохматиться", "лукавить", "лукавствовать", "лучиться", "лысеть", "льстить", "любезничать", "любоваться", "любопытствовать"
]


# --- ЛИТЕРАТУРНЫЕ ШАБЛОНЫ ДЛЯ ПРЕДЛОЖЕНИЙ ---
SENTENCE_TEMPLATES_RU = [
    "{verb_gerund}, {adj} {subj} решил {dahl_verb}.",
    "{adj} {subj}, который {verb_gerund}, внезапно начал {dahl_verb}.",
    "Даже не пытаясь {verb_part}, {adj} {subj} предпочел {dahl_verb}.",
    "В центре внимания оказался {adj} {subj}, который, {verb_gerund}, умудрился {dahl_verb}."
]

# --- ТЕХНИЧЕСКИЕ ПАРАМЕТРЫ СЪЕМКИ ---
CAMERA_ANGLES_RU = ["Крупный план", "Сверхширокий общий план", "Съемка с нижнего ракурса", "Вид сверху", "Голландский угол"]
CAMERA_MOVEMENTS_RU = ["Плавный наезд", "Быстрый монтаж", "Медленное панорамирование", "Съемка со стедикама", "Вращение камеры"]
LENS_EFFECTS_RU = ["Эффект 'рыбий глаз'", "Мягкий фокус с боке", "Анаморфотные блики", "Эффект 'тильт-шифт'"]
STYLES_RU = ["в стиле Уэса Андерсона", "гиперреализм", "как запись на VHS кассету", "кукольная анимация", "в стиле аниме", "киберпанк"]
TEMPORAL_ELEMENTS_RU = ["Замедленная съемка (slow motion)", "Ускоренная съемка (timelapse)", "Резкий стоп-кадр", "Обратная перемотка"]
AUDIO_RU = ["Эпическая оркестровая музыка", "Звуки природы", "Полная тишина", "Электронная музыка 80-х", "Диалог шепотом"]

# --- Английские версии для промпта ---
CAMERA_ANGLES_EN = ["close-up shot", "extreme wide shot", "low-angle shot", "top-down shot", "dutch angle"]
CAMERA_MOVEMENTS_EN = ["dolly in", "fast cut editing", "slow panning", "steadicam shot", "360-degree rotation"]
LENS_EFFECTS_EN = ["fisheye lens", "soft focus with bokeh", "anamorphic lens flare", "tilt-shift effect"]
STYLES_EN = ["in the style of Wes Anderson", "hyperrealistic, 8K", "80s VHS recording", "stop-motion animation", "Studio Ghibli anime style", "cyberpunk"]
TEMPORAL_ELEMENTS_EN = ["slow motion", "timelapse", "freeze frame", "reverse motion"]
AUDIO_EN = ["epic orchestral music", "sounds of nature", "complete silence", "80s electronic synth music", "whispered dialogue"]


# --- ИНТЕРАКТИВНЫЕ ФУНКЦИИ БОТА ---

def get_theme_keyboard(selected_themes):
    keyboard = []
    row = []
    theme_names = sorted(list(THEMES.keys()))
    for theme_name in theme_names:
        text = f"✅ {theme_name.capitalize()}" if theme_name in selected_themes else theme_name.capitalize()
        row.append(InlineKeyboardButton(text, callback_data=theme_name))
        if len(row) == 2:
            keyboard.append(row)
            row = []
    if row:
        keyboard.append(row)
    
    if len(selected_themes) == 3:
        keyboard.append([InlineKeyboardButton("🚀 Создать Сценарий!", callback_data="generate")])
        
    return InlineKeyboardMarkup(keyboard)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['selected_themes'] = []
    keyboard = get_theme_keyboard([])
    message_text = ("Привет! Я — AI-писатель Габриэль.\n\n"
                    "Пожалуйста, выбери ровно три темы для создания уникального сценария.")
    
    if update.message:
        await update.message.reply_text(message_text, reply_markup=keyboard)
    elif update.callback_query:
        await update.callback_query.edit_message_text(message_text, reply_markup=keyboard)

    return SELECTING_THEMES

async def select_theme(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    theme_name = query.data
    
    selected_themes = context.user_data.get('selected_themes', [])

    if theme_name == "generate":
        return await generate_script(update, context)

    if theme_name in selected_themes:
        selected_themes.remove(theme_name)
    elif len(selected_themes) < 3:
        selected_themes.append(theme_name)
        
    context.user_data['selected_themes'] = selected_themes
    
    keyboard = get_theme_keyboard(selected_themes)
    
    count = len(selected_themes)
    if count < 3:
        text = f"Выбрано {count} из 3. Пожалуйста, выбери еще {3-count}."
    else:
        text = f"Отлично! Твой микс: {', '.join(t.capitalize() for t in selected_themes)}.\n\nНажми 'Создать Сценарий!'."

    await query.edit_message_text(text=text, reply_markup=keyboard)
    
    return SELECTING_THEMES

async def generate_script(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.edit_message_text(text="Принято! Создаю литературный шедевр для VEO...")

    selected_themes = context.user_data.get('selected_themes', [])

    # Собираем смешанные базы слов
    combined_subjects = [word for theme in selected_themes for word in THEMES[theme]["subjects_ru"]]
    combined_adjectives = [word for theme in selected_themes for word in THEMES[theme]["adjectives_ru"]]
    combined_verbs = [word for theme in selected_themes for word in THEMES[theme]["verbs_ru"]]

    # Выбираем слова
    subj = random.choice(combined_subjects)
    adj = random.choice(combined_adjectives)
    verb_gerund = random.choice(combined_verbs) # Глагол для оборота
    dahl_verb = random.choice(GLAGOLY_DALYA_RU) # Душа проекта
    verb_part = verb_gerund # Упрощение для шаблона

    # Создаем литературное предложение
    template = random.choice(SENTENCE_TEMPLATES_RU)
    literary_prompt = template.format(subj=subj, adj=adj, verb_gerund=verb_gerund, verb_part=verb_part, dahl_verb=dahl_verb).capitalize()

    # Генерируем технический промпт
    angle = random.choice(CAMERA_ANGLES_RU)
    movement = random.choice(CAMERA_MOVEMENTS_RU)
    lens = random.choice(LENS_EFFECTS_RU)
    style = random.choice(STYLES_RU)
    temporal = random.choice(TEMPORAL_ELEMENTS_RU)
    audio = random.choice(AUDIO_RU)
    
    script_ru = (
        f"🎬 **Режиссерский сценарий (VEO)**\n\n"
        f"▪️ **Subject:** {subj.capitalize()}\n"
        f"▪️ **Action:** {verb_gerund}\n"
        f"▪️ **Scene:** {adj} пейзаж\n"
        f"▪️ **Camera angles:** {angle}\n"
        f"▪️ **Camera movements:** {movement}\n"
        f"▪️ **Lens effects:** {lens}\n"
        f"▪️ **Style:** {style}\n"
        f"▪️ **Temporal elements:** {temporal}\n"
        f"▪️ **Audio:** {audio}\n\n"
        f"🎤 **Голос Габриэля:** *{literary_prompt}*"
    )

    # Упрощенная генерация английского промпта
    prompt_en = (
        f"Subject: a {adj} {subj}\n"
        f"Action: {verb_gerund}\n"
        f"Scene: a vast landscape\n"
        f"Style: {random.choice(STYLES_EN)}"
    )

    await context.bot.send_message(chat_id=query.message.chat_id, text=script_ru, parse_mode='Markdown')
    await context.bot.send_message(chat_id=query.message.chat_id, text=f"🤖 **Промпт для VEO:**\n\n`{prompt_en}`", parse_mode='Markdown')
    
    # Возвращаемся в начало диалога
    await start(update, context)
    return SELECTING_THEMES


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text('Действие отменено. Напишите /start, чтобы начать снова.')
    context.user_data.clear()
    return ConversationHandler.END

async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    print(f"Произошла ошибка: {context.error}")

def main() -> None:
    TOKEN = os.environ.get('TELEGRAM_TOKEN')
    if not TOKEN:
        print("ОШИБКА: Токен не найден.")
        return

    application = Application.builder().token(TOKEN).build()
    
    application.add_error_handler(error_handler)
    
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            SELECTING_THEMES: [CallbackQueryHandler(select_theme)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
        per_message=False # ВАЖНОЕ ИСПРАВЛЕНИЕ ДЛЯ НОВОЙ ВЕРСИИ БИБЛИОТЕКИ
    )

    application.add_handler(conv_handler)
    
    print(f"{PROJECT_NAME} запущен и готов к работе!")
    application.run_polling()

if __name__ == "__main__":
    main()


